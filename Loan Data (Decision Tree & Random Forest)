{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"6DEQ7SlyNQYs"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","from matplotlib import pyplot as plt\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn import metrics as skm\n","from sklearn.metrics import classification_report, accuracy_score, confusion_matrix"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":287},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1657274970664,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"jvp3tMdVQoXO","outputId":"49b7a5d2-1f7b-489c-d064-af20de031427"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-bfbedf73-80ed-4d4b-b1b6-0213b5abeeab\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Loan_ID</th>\n","      <th>Gender</th>\n","      <th>Married</th>\n","      <th>Dependents</th>\n","      <th>Education</th>\n","      <th>Self_Employed</th>\n","      <th>ApplicantIncome</th>\n","      <th>CoapplicantIncome</th>\n","      <th>LoanAmount</th>\n","      <th>Loan_Amount_Term</th>\n","      <th>Credit_History</th>\n","      <th>Property_Area</th>\n","      <th>Loan_Status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>LP001002</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>0</td>\n","      <td>Graduate</td>\n","      <td>No</td>\n","      <td>5849</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>Urban</td>\n","      <td>Y</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>LP001003</td>\n","      <td>Male</td>\n","      <td>Yes</td>\n","      <td>1</td>\n","      <td>Graduate</td>\n","      <td>No</td>\n","      <td>4583</td>\n","      <td>1508.0</td>\n","      <td>128.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>Rural</td>\n","      <td>N</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>LP001005</td>\n","      <td>Male</td>\n","      <td>Yes</td>\n","      <td>0</td>\n","      <td>Graduate</td>\n","      <td>Yes</td>\n","      <td>3000</td>\n","      <td>0.0</td>\n","      <td>66.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>Urban</td>\n","      <td>Y</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>LP001006</td>\n","      <td>Male</td>\n","      <td>Yes</td>\n","      <td>0</td>\n","      <td>Not Graduate</td>\n","      <td>No</td>\n","      <td>2583</td>\n","      <td>2358.0</td>\n","      <td>120.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>Urban</td>\n","      <td>Y</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>LP001008</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>0</td>\n","      <td>Graduate</td>\n","      <td>No</td>\n","      <td>6000</td>\n","      <td>0.0</td>\n","      <td>141.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","      <td>Urban</td>\n","      <td>Y</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bfbedf73-80ed-4d4b-b1b6-0213b5abeeab')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bfbedf73-80ed-4d4b-b1b6-0213b5abeeab button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bfbedf73-80ed-4d4b-b1b6-0213b5abeeab');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["    Loan_ID Gender Married Dependents     Education Self_Employed  \\\n","0  LP001002   Male      No          0      Graduate            No   \n","1  LP001003   Male     Yes          1      Graduate            No   \n","2  LP001005   Male     Yes          0      Graduate           Yes   \n","3  LP001006   Male     Yes          0  Not Graduate            No   \n","4  LP001008   Male      No          0      Graduate            No   \n","\n","   ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n","0             5849                0.0         NaN             360.0   \n","1             4583             1508.0       128.0             360.0   \n","2             3000                0.0        66.0             360.0   \n","3             2583             2358.0       120.0             360.0   \n","4             6000                0.0       141.0             360.0   \n","\n","   Credit_History Property_Area Loan_Status  \n","0             1.0         Urban           Y  \n","1             1.0         Rural           N  \n","2             1.0         Urban           Y  \n","3             1.0         Urban           Y  \n","4             1.0         Urban           Y  "]},"execution_count":22,"metadata":{},"output_type":"execute_result"}],"source":["##Read dataset from csv file..\n","\n","\n","loan_data = pd.read_csv('/content/loan_data_set.csv')\n","loan_data.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":429,"status":"ok","timestamp":1657274990393,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"pharhcsTN2jc","outputId":"6ae1984d-0fae-4278-8d71-3c02f8db9206"},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 614 entries, 0 to 613\n","Data columns (total 13 columns):\n"," #   Column             Non-Null Count  Dtype  \n","---  ------             --------------  -----  \n"," 0   Loan_ID            614 non-null    object \n"," 1   Gender             601 non-null    object \n"," 2   Married            611 non-null    object \n"," 3   Dependents         599 non-null    object \n"," 4   Education          614 non-null    object \n"," 5   Self_Employed      582 non-null    object \n"," 6   ApplicantIncome    614 non-null    int64  \n"," 7   CoapplicantIncome  614 non-null    float64\n"," 8   LoanAmount         592 non-null    float64\n"," 9   Loan_Amount_Term   600 non-null    float64\n"," 10  Credit_History     564 non-null    float64\n"," 11  Property_Area      614 non-null    object \n"," 12  Loan_Status        614 non-null    object \n","dtypes: float64(4), int64(1), object(8)\n","memory usage: 62.5+ KB\n"]}],"source":["loan_data.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":449,"status":"ok","timestamp":1657275011460,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"lD7p9ArPOJD7","outputId":"6b782642-e681-42cc-c1e3-fec95d1af3f3"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-a70cbbce-c283-4709-8274-f2581e9cb10a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ApplicantIncome</th>\n","      <th>CoapplicantIncome</th>\n","      <th>LoanAmount</th>\n","      <th>Loan_Amount_Term</th>\n","      <th>Credit_History</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>614.000000</td>\n","      <td>614.000000</td>\n","      <td>592.000000</td>\n","      <td>600.00000</td>\n","      <td>564.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5403.459283</td>\n","      <td>1621.245798</td>\n","      <td>146.412162</td>\n","      <td>342.00000</td>\n","      <td>0.842199</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>6109.041673</td>\n","      <td>2926.248369</td>\n","      <td>85.587325</td>\n","      <td>65.12041</td>\n","      <td>0.364878</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>150.000000</td>\n","      <td>0.000000</td>\n","      <td>9.000000</td>\n","      <td>12.00000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2877.500000</td>\n","      <td>0.000000</td>\n","      <td>100.000000</td>\n","      <td>360.00000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>3812.500000</td>\n","      <td>1188.500000</td>\n","      <td>128.000000</td>\n","      <td>360.00000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>5795.000000</td>\n","      <td>2297.250000</td>\n","      <td>168.000000</td>\n","      <td>360.00000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>81000.000000</td>\n","      <td>41667.000000</td>\n","      <td>700.000000</td>\n","      <td>480.00000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a70cbbce-c283-4709-8274-f2581e9cb10a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a70cbbce-c283-4709-8274-f2581e9cb10a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a70cbbce-c283-4709-8274-f2581e9cb10a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["       ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n","count       614.000000         614.000000  592.000000         600.00000   \n","mean       5403.459283        1621.245798  146.412162         342.00000   \n","std        6109.041673        2926.248369   85.587325          65.12041   \n","min         150.000000           0.000000    9.000000          12.00000   \n","25%        2877.500000           0.000000  100.000000         360.00000   \n","50%        3812.500000        1188.500000  128.000000         360.00000   \n","75%        5795.000000        2297.250000  168.000000         360.00000   \n","max       81000.000000       41667.000000  700.000000         480.00000   \n","\n","       Credit_History  \n","count      564.000000  \n","mean         0.842199  \n","std          0.364878  \n","min          0.000000  \n","25%          1.000000  \n","50%          1.000000  \n","75%          1.000000  \n","max          1.000000  "]},"execution_count":24,"metadata":{},"output_type":"execute_result"}],"source":["loan_data.describe()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1657275028039,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"3BjxjrLNOK3T","outputId":"69416308-c869-48f4-b9ce-99e9cf0696e7"},"outputs":[{"data":{"text/plain":["(614, 13)"]},"execution_count":25,"metadata":{},"output_type":"execute_result"}],"source":["loan_data.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":447,"status":"ok","timestamp":1657274018659,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"53_Mbwo0OWKA","outputId":"a9a84dc3-08e4-4e52-aa3e-a617bc22089e"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-90007314-a211-4d4b-86db-4a436001aaaf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ApplicantIncome</th>\n","      <th>CoapplicantIncome</th>\n","      <th>LoanAmount</th>\n","      <th>Loan_Amount_Term</th>\n","      <th>Credit_History</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>614.000000</td>\n","      <td>614.000000</td>\n","      <td>592.000000</td>\n","      <td>600.00000</td>\n","      <td>564.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5403.459283</td>\n","      <td>1621.245798</td>\n","      <td>146.412162</td>\n","      <td>342.00000</td>\n","      <td>0.842199</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>6109.041673</td>\n","      <td>2926.248369</td>\n","      <td>85.587325</td>\n","      <td>65.12041</td>\n","      <td>0.364878</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>150.000000</td>\n","      <td>0.000000</td>\n","      <td>9.000000</td>\n","      <td>12.00000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2877.500000</td>\n","      <td>0.000000</td>\n","      <td>100.000000</td>\n","      <td>360.00000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>3812.500000</td>\n","      <td>1188.500000</td>\n","      <td>128.000000</td>\n","      <td>360.00000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>5795.000000</td>\n","      <td>2297.250000</td>\n","      <td>168.000000</td>\n","      <td>360.00000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>81000.000000</td>\n","      <td>41667.000000</td>\n","      <td>700.000000</td>\n","      <td>480.00000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-90007314-a211-4d4b-86db-4a436001aaaf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-90007314-a211-4d4b-86db-4a436001aaaf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-90007314-a211-4d4b-86db-4a436001aaaf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["       ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n","count       614.000000         614.000000  592.000000         600.00000   \n","mean       5403.459283        1621.245798  146.412162         342.00000   \n","std        6109.041673        2926.248369   85.587325          65.12041   \n","min         150.000000           0.000000    9.000000          12.00000   \n","25%        2877.500000           0.000000  100.000000         360.00000   \n","50%        3812.500000        1188.500000  128.000000         360.00000   \n","75%        5795.000000        2297.250000  168.000000         360.00000   \n","max       81000.000000       41667.000000  700.000000         480.00000   \n","\n","       Credit_History  \n","count      564.000000  \n","mean         0.842199  \n","std          0.364878  \n","min          0.000000  \n","25%          1.000000  \n","50%          1.000000  \n","75%          1.000000  \n","max          1.000000  "]},"execution_count":17,"metadata":{},"output_type":"execute_result"}],"source":["##We have many missing values in some columns..!!\n","\n","loans.describe()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":587},"executionInfo":{"elapsed":1059,"status":"ok","timestamp":1657275067273,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"1TUrP1wCOcmD","outputId":"a905d454-5085-4491-e3e9-f7e05eea3ea2"},"outputs":[{"data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fc041d0ec90>"]},"execution_count":26,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 864x576 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["fig = plt.figure(figsize = (12, 8))\n","sns.heatmap(loan_data.isnull(), yticklabels = False, cbar = False, cmap = 'viridis')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":422,"status":"ok","timestamp":1657275082593,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"_XE8PzNSSqHf","outputId":"ca2f8993-fca4-457c-aa61-cbeea18496e5"},"outputs":[{"data":{"text/plain":["Loan_ID               0\n","Gender               13\n","Married               3\n","Dependents           15\n","Education             0\n","Self_Employed        32\n","ApplicantIncome       0\n","CoapplicantIncome     0\n","LoanAmount           22\n","Loan_Amount_Term     14\n","Credit_History       50\n","Property_Area         0\n","Loan_Status           0\n","dtype: int64"]},"execution_count":27,"metadata":{},"output_type":"execute_result"}],"source":["##Data Cleaning process start..!!\n","\n","loan_data.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":423,"status":"ok","timestamp":1657275096920,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"sIXWBHZKSuD-","outputId":"d0eb32f4-7474-4678-caa8-3f86a224e6a8"},"outputs":[{"data":{"text/plain":["Loan_ID               object\n","Gender                object\n","Married               object\n","Dependents            object\n","Education             object\n","Self_Employed         object\n","ApplicantIncome        int64\n","CoapplicantIncome    float64\n","LoanAmount           float64\n","Loan_Amount_Term     float64\n","Credit_History       float64\n","Property_Area         object\n","Loan_Status           object\n","dtype: object"]},"execution_count":28,"metadata":{},"output_type":"execute_result"}],"source":["loan_data.dtypes"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"elapsed":710,"status":"ok","timestamp":1657275117754,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"dJP-W0_XSyzz","outputId":"0c974119-2a0d-4141-ce51-2bd888dddedc"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-c260439e-6610-4844-9587-15645d50e3c6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Loan_ID</th>\n","      <th>Gender</th>\n","      <th>Married</th>\n","      <th>Dependents</th>\n","      <th>Education</th>\n","      <th>Self_Employed</th>\n","      <th>Property_Area</th>\n","      <th>Loan_Status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>LP001002</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>0</td>\n","      <td>Graduate</td>\n","      <td>No</td>\n","      <td>Urban</td>\n","      <td>Y</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>LP001003</td>\n","      <td>Male</td>\n","      <td>Yes</td>\n","      <td>1</td>\n","      <td>Graduate</td>\n","      <td>No</td>\n","      <td>Rural</td>\n","      <td>N</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>LP001005</td>\n","      <td>Male</td>\n","      <td>Yes</td>\n","      <td>0</td>\n","      <td>Graduate</td>\n","      <td>Yes</td>\n","      <td>Urban</td>\n","      <td>Y</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>LP001006</td>\n","      <td>Male</td>\n","      <td>Yes</td>\n","      <td>0</td>\n","      <td>Not Graduate</td>\n","      <td>No</td>\n","      <td>Urban</td>\n","      <td>Y</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>LP001008</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>0</td>\n","      <td>Graduate</td>\n","      <td>No</td>\n","      <td>Urban</td>\n","      <td>Y</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>609</th>\n","      <td>LP002978</td>\n","      <td>Female</td>\n","      <td>No</td>\n","      <td>0</td>\n","      <td>Graduate</td>\n","      <td>No</td>\n","      <td>Rural</td>\n","      <td>Y</td>\n","    </tr>\n","    <tr>\n","      <th>610</th>\n","      <td>LP002979</td>\n","      <td>Male</td>\n","      <td>Yes</td>\n","      <td>3+</td>\n","      <td>Graduate</td>\n","      <td>No</td>\n","      <td>Rural</td>\n","      <td>Y</td>\n","    </tr>\n","    <tr>\n","      <th>611</th>\n","      <td>LP002983</td>\n","      <td>Male</td>\n","      <td>Yes</td>\n","      <td>1</td>\n","      <td>Graduate</td>\n","      <td>No</td>\n","      <td>Urban</td>\n","      <td>Y</td>\n","    </tr>\n","    <tr>\n","      <th>612</th>\n","      <td>LP002984</td>\n","      <td>Male</td>\n","      <td>Yes</td>\n","      <td>2</td>\n","      <td>Graduate</td>\n","      <td>No</td>\n","      <td>Urban</td>\n","      <td>Y</td>\n","    </tr>\n","    <tr>\n","      <th>613</th>\n","      <td>LP002990</td>\n","      <td>Female</td>\n","      <td>No</td>\n","      <td>0</td>\n","      <td>Graduate</td>\n","      <td>Yes</td>\n","      <td>Semiurban</td>\n","      <td>N</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>614 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c260439e-6610-4844-9587-15645d50e3c6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c260439e-6610-4844-9587-15645d50e3c6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c260439e-6610-4844-9587-15645d50e3c6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["      Loan_ID  Gender Married Dependents     Education Self_Employed  \\\n","0    LP001002    Male      No          0      Graduate            No   \n","1    LP001003    Male     Yes          1      Graduate            No   \n","2    LP001005    Male     Yes          0      Graduate           Yes   \n","3    LP001006    Male     Yes          0  Not Graduate            No   \n","4    LP001008    Male      No          0      Graduate            No   \n","..        ...     ...     ...        ...           ...           ...   \n","609  LP002978  Female      No          0      Graduate            No   \n","610  LP002979    Male     Yes         3+      Graduate            No   \n","611  LP002983    Male     Yes          1      Graduate            No   \n","612  LP002984    Male     Yes          2      Graduate            No   \n","613  LP002990  Female      No          0      Graduate           Yes   \n","\n","    Property_Area Loan_Status  \n","0           Urban           Y  \n","1           Rural           N  \n","2           Urban           Y  \n","3           Urban           Y  \n","4           Urban           Y  \n","..            ...         ...  \n","609         Rural           Y  \n","610         Rural           Y  \n","611         Urban           Y  \n","612         Urban           Y  \n","613     Semiurban           N  \n","\n","[614 rows x 8 columns]"]},"execution_count":29,"metadata":{},"output_type":"execute_result"}],"source":["non_numeric = loan_data[['Loan_ID','Gender','Married','Dependents','Education','Self_Employed','Property_Area','Loan_Status']]\n","non_numeric"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"elapsed":441,"status":"ok","timestamp":1657275137334,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"IfvKe0QOS2mp","outputId":"9b73c72d-319d-4835-a99f-14c9dbb9aa55"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-9375f400-d3fe-48b0-bb93-c82f4e3e7c89\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ApplicantIncome</th>\n","      <th>CoapplicantIncome</th>\n","      <th>LoanAmount</th>\n","      <th>Loan_Amount_Term</th>\n","      <th>Credit_History</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5849</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4583</td>\n","      <td>1508.0</td>\n","      <td>128.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3000</td>\n","      <td>0.0</td>\n","      <td>66.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2583</td>\n","      <td>2358.0</td>\n","      <td>120.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6000</td>\n","      <td>0.0</td>\n","      <td>141.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>609</th>\n","      <td>2900</td>\n","      <td>0.0</td>\n","      <td>71.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>610</th>\n","      <td>4106</td>\n","      <td>0.0</td>\n","      <td>40.0</td>\n","      <td>180.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>611</th>\n","      <td>8072</td>\n","      <td>240.0</td>\n","      <td>253.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>612</th>\n","      <td>7583</td>\n","      <td>0.0</td>\n","      <td>187.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>613</th>\n","      <td>4583</td>\n","      <td>0.0</td>\n","      <td>133.0</td>\n","      <td>360.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>614 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9375f400-d3fe-48b0-bb93-c82f4e3e7c89')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9375f400-d3fe-48b0-bb93-c82f4e3e7c89 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9375f400-d3fe-48b0-bb93-c82f4e3e7c89');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["     ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n","0               5849                0.0         NaN             360.0   \n","1               4583             1508.0       128.0             360.0   \n","2               3000                0.0        66.0             360.0   \n","3               2583             2358.0       120.0             360.0   \n","4               6000                0.0       141.0             360.0   \n","..               ...                ...         ...               ...   \n","609             2900                0.0        71.0             360.0   \n","610             4106                0.0        40.0             180.0   \n","611             8072              240.0       253.0             360.0   \n","612             7583                0.0       187.0             360.0   \n","613             4583                0.0       133.0             360.0   \n","\n","     Credit_History  \n","0               1.0  \n","1               1.0  \n","2               1.0  \n","3               1.0  \n","4               1.0  \n","..              ...  \n","609             1.0  \n","610             1.0  \n","611             1.0  \n","612             1.0  \n","613             0.0  \n","\n","[614 rows x 5 columns]"]},"execution_count":30,"metadata":{},"output_type":"execute_result"}],"source":["numeric_data = loan_data[['ApplicantIncome','CoapplicantIncome','LoanAmount','Loan_Amount_Term','Credit_History']]\n","numeric_data"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":430,"status":"ok","timestamp":1657275153363,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"uGBmZO9wS7dE","outputId":"e072b626-a455-48cd-b0c0-35bf466d03e9"},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 614 entries, 0 to 613\n","Data columns (total 8 columns):\n"," #   Column         Non-Null Count  Dtype \n","---  ------         --------------  ----- \n"," 0   Loan_ID        614 non-null    object\n"," 1   Gender         601 non-null    object\n"," 2   Married        611 non-null    object\n"," 3   Dependents     599 non-null    object\n"," 4   Education      614 non-null    object\n"," 5   Self_Employed  582 non-null    object\n"," 6   Property_Area  614 non-null    object\n"," 7   Loan_Status    614 non-null    object\n","dtypes: object(8)\n","memory usage: 38.5+ KB\n"]}],"source":["non_numeric.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":419,"status":"ok","timestamp":1657275192262,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"6QAfC9cES_Xo","outputId":"e2edb5f2-4664-4f29-c40a-68f7f2d46dc1"},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 614 entries, 0 to 613\n","Data columns (total 5 columns):\n"," #   Column             Non-Null Count  Dtype  \n","---  ------             --------------  -----  \n"," 0   ApplicantIncome    614 non-null    int64  \n"," 1   CoapplicantIncome  614 non-null    float64\n"," 2   LoanAmount         592 non-null    float64\n"," 3   Loan_Amount_Term   600 non-null    float64\n"," 4   Credit_History     564 non-null    float64\n","dtypes: float64(4), int64(1)\n","memory usage: 24.1 KB\n"]}],"source":["numeric_data.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1657275220471,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"oy_ygLVOTI2G","outputId":"63562f68-3765-43ba-999e-b03e66687de0"},"outputs":[{"data":{"text/plain":["Loan_Status\n","N    192\n","Y    422\n","Name: Loan_ID, dtype: int64"]},"execution_count":33,"metadata":{},"output_type":"execute_result"}],"source":["non_numeric.groupby('Loan_Status')['Loan_ID'].count()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":472,"status":"ok","timestamp":1657275234379,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"o5wDU2JSTPXC","outputId":"3df319b8-cdfc-443a-ee74-1e6783d12fcf"},"outputs":[{"data":{"text/plain":["Loan_ID           0\n","Gender           13\n","Married           3\n","Dependents       15\n","Education         0\n","Self_Employed    32\n","Property_Area     0\n","Loan_Status       0\n","dtype: int64"]},"execution_count":34,"metadata":{},"output_type":"execute_result"}],"source":["non_numeric.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CaWZQ4DZTTIe"},"outputs":[],"source":["temp1 = non_numeric.groupby('Gender')['Loan_ID'].count().idxmax()\n","temp2 = non_numeric.groupby('Married')['Loan_ID'].count().idxmax()\n","temp3 = non_numeric.groupby('Dependents')['Loan_ID'].count().idxmax()\n","temp4 = non_numeric.groupby('Self_Employed')['Loan_ID'].count().idxmax()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":517,"status":"ok","timestamp":1657275330678,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"92YZvPg2TZa-","outputId":"c5dbb8d4-921a-400c-9134-cf7472175ce9"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  This is separate from the ipykernel package so we can avoid doing imports until\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  after removing the cwd from sys.path.\n"]}],"source":["non_numeric['Gender'] = non_numeric['Gender'].fillna(temp1)\n","non_numeric['Married'] = non_numeric['Married'].fillna(temp2)\n","non_numeric['Dependents'] = non_numeric['Dependents'].fillna(temp3)\n","non_numeric['Self_Employed'] = non_numeric['Self_Employed'].fillna(temp4)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":437,"status":"ok","timestamp":1657275344363,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"oYJXC9EZTefY","outputId":"a9bc9530-3304-4e06-a36e-281f8cf7549e"},"outputs":[{"data":{"text/plain":["Loan_ID          0\n","Gender           0\n","Married          0\n","Dependents       0\n","Education        0\n","Self_Employed    0\n","Property_Area    0\n","Loan_Status      0\n","dtype: int64"]},"execution_count":38,"metadata":{},"output_type":"execute_result"}],"source":["##First half of dataset is clean..!!\n","\n","non_numeric.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":501},"executionInfo":{"elapsed":447,"status":"ok","timestamp":1657275355499,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"n0VtJtM3Tt-w","outputId":"c2490a58-4a02-4f40-fecf-89f8167b50a4"},"outputs":[{"data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fc03e6c3410>"]},"execution_count":39,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 864x576 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["fig = plt.figure(figsize = (12, 8))\n","sns.heatmap(non_numeric.isnull(), yticklabels = False, cbar = False, cmap = 'viridis')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"elapsed":427,"status":"ok","timestamp":1657275366758,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"Uh5FnC80Twtp","outputId":"d55f15a2-2be6-4c0c-96f7-34416ac5af87"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-980d3cf0-d2eb-4a42-a5f8-cc57649aa78f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ApplicantIncome</th>\n","      <th>CoapplicantIncome</th>\n","      <th>LoanAmount</th>\n","      <th>Loan_Amount_Term</th>\n","      <th>Credit_History</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5849</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4583</td>\n","      <td>1508.0</td>\n","      <td>128.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3000</td>\n","      <td>0.0</td>\n","      <td>66.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2583</td>\n","      <td>2358.0</td>\n","      <td>120.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6000</td>\n","      <td>0.0</td>\n","      <td>141.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>609</th>\n","      <td>2900</td>\n","      <td>0.0</td>\n","      <td>71.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>610</th>\n","      <td>4106</td>\n","      <td>0.0</td>\n","      <td>40.0</td>\n","      <td>180.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>611</th>\n","      <td>8072</td>\n","      <td>240.0</td>\n","      <td>253.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>612</th>\n","      <td>7583</td>\n","      <td>0.0</td>\n","      <td>187.0</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>613</th>\n","      <td>4583</td>\n","      <td>0.0</td>\n","      <td>133.0</td>\n","      <td>360.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>614 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-980d3cf0-d2eb-4a42-a5f8-cc57649aa78f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-980d3cf0-d2eb-4a42-a5f8-cc57649aa78f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-980d3cf0-d2eb-4a42-a5f8-cc57649aa78f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["     ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n","0               5849                0.0         NaN             360.0   \n","1               4583             1508.0       128.0             360.0   \n","2               3000                0.0        66.0             360.0   \n","3               2583             2358.0       120.0             360.0   \n","4               6000                0.0       141.0             360.0   \n","..               ...                ...         ...               ...   \n","609             2900                0.0        71.0             360.0   \n","610             4106                0.0        40.0             180.0   \n","611             8072              240.0       253.0             360.0   \n","612             7583                0.0       187.0             360.0   \n","613             4583                0.0       133.0             360.0   \n","\n","     Credit_History  \n","0               1.0  \n","1               1.0  \n","2               1.0  \n","3               1.0  \n","4               1.0  \n","..              ...  \n","609             1.0  \n","610             1.0  \n","611             1.0  \n","612             1.0  \n","613             0.0  \n","\n","[614 rows x 5 columns]"]},"execution_count":40,"metadata":{},"output_type":"execute_result"}],"source":["numeric_data"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":428,"status":"ok","timestamp":1657275387886,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"0uDLTRyzTzdq","outputId":"1bb1925a-0a05-4489-99a5-5437bd85453a"},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 614 entries, 0 to 613\n","Data columns (total 5 columns):\n"," #   Column             Non-Null Count  Dtype  \n","---  ------             --------------  -----  \n"," 0   ApplicantIncome    614 non-null    int64  \n"," 1   CoapplicantIncome  614 non-null    float64\n"," 2   LoanAmount         592 non-null    float64\n"," 3   Loan_Amount_Term   600 non-null    float64\n"," 4   Credit_History     564 non-null    float64\n","dtypes: float64(4), int64(1)\n","memory usage: 24.1 KB\n"]}],"source":["numeric_data.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":530,"status":"ok","timestamp":1657275399320,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"hiw9_fyxT4n0","outputId":"916c64f8-4809-42db-973b-e4e9b34e130c"},"outputs":[{"data":{"text/plain":["ApplicantIncome       0\n","CoapplicantIncome     0\n","LoanAmount           22\n","Loan_Amount_Term     14\n","Credit_History       50\n","dtype: int64"]},"execution_count":42,"metadata":{},"output_type":"execute_result"}],"source":["numeric_data.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lt5lJolrT7XT"},"outputs":[],"source":["mean1 = numeric_data['LoanAmount'].mean()\n","mean2 = numeric_data['Loan_Amount_Term'].mean()\n","mean3 = numeric_data['Credit_History'].mean()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1657275427644,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"6TfV3ysLT-dn","outputId":"2568479e-7467-4765-aefa-1561bf19e6bc"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]}],"source":["numeric_data['LoanAmount'] = numeric_data['LoanAmount'].fillna(mean1)\n","numeric_data['Loan_Amount_Term'] = numeric_data['Loan_Amount_Term'].fillna(mean2)\n","numeric_data['Credit_History'] = numeric_data['Credit_History'].fillna(mean3)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":508,"status":"ok","timestamp":1657275443609,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"HBEOX2z6UCVV","outputId":"6da623d6-e16e-4efd-f868-f6b2194d6074"},"outputs":[{"data":{"text/plain":["ApplicantIncome      0\n","CoapplicantIncome    0\n","LoanAmount           0\n","Loan_Amount_Term     0\n","Credit_History       0\n","dtype: int64"]},"execution_count":45,"metadata":{},"output_type":"execute_result"}],"source":["##The remaining part of dataset is clean..!!\n","\n","numeric_data.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":501},"executionInfo":{"elapsed":462,"status":"ok","timestamp":1657275454243,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"fdeU7_HPUGM7","outputId":"2070d690-1dab-4ac1-d4e3-b66bc12a5c2b"},"outputs":[{"data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fc03e1f6b50>"]},"execution_count":46,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 864x576 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["fig = plt.figure(figsize = (12, 8))\n","sns.heatmap(numeric_data.isnull(), yticklabels = False, cbar = False, cmap = 'viridis')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":505},"executionInfo":{"elapsed":443,"status":"ok","timestamp":1657275465479,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"AYqWGMJIUI4j","outputId":"68f8902f-b32d-4053-d95c-8d8a18884875"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-43f0a53a-11c7-473a-be94-eba589687ad5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Loan_ID</th>\n","      <th>Gender_Male</th>\n","      <th>Married_Yes</th>\n","      <th>Dependents_1</th>\n","      <th>Dependents_2</th>\n","      <th>Dependents_3+</th>\n","      <th>Education_Not Graduate</th>\n","      <th>Self_Employed_Yes</th>\n","      <th>Property_Area_Semiurban</th>\n","      <th>Property_Area_Urban</th>\n","      <th>Loan_Status_Y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>LP001002</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>LP001003</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>LP001005</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>LP001006</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>LP001008</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>609</th>\n","      <td>LP002978</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>610</th>\n","      <td>LP002979</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>611</th>\n","      <td>LP002983</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>612</th>\n","      <td>LP002984</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>613</th>\n","      <td>LP002990</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>614 rows × 11 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-43f0a53a-11c7-473a-be94-eba589687ad5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-43f0a53a-11c7-473a-be94-eba589687ad5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-43f0a53a-11c7-473a-be94-eba589687ad5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["      Loan_ID  Gender_Male  Married_Yes  Dependents_1  Dependents_2  \\\n","0    LP001002            1            0             0             0   \n","1    LP001003            1            1             1             0   \n","2    LP001005            1            1             0             0   \n","3    LP001006            1            1             0             0   \n","4    LP001008            1            0             0             0   \n","..        ...          ...          ...           ...           ...   \n","609  LP002978            0            0             0             0   \n","610  LP002979            1            1             0             0   \n","611  LP002983            1            1             1             0   \n","612  LP002984            1            1             0             1   \n","613  LP002990            0            0             0             0   \n","\n","     Dependents_3+  Education_Not Graduate  Self_Employed_Yes  \\\n","0                0                       0                  0   \n","1                0                       0                  0   \n","2                0                       0                  1   \n","3                0                       1                  0   \n","4                0                       0                  0   \n","..             ...                     ...                ...   \n","609              0                       0                  0   \n","610              1                       0                  0   \n","611              0                       0                  0   \n","612              0                       0                  0   \n","613              0                       0                  1   \n","\n","     Property_Area_Semiurban  Property_Area_Urban  Loan_Status_Y  \n","0                          0                    1              1  \n","1                          0                    0              0  \n","2                          0                    1              1  \n","3                          0                    1              1  \n","4                          0                    1              1  \n","..                       ...                  ...            ...  \n","609                        0                    0              1  \n","610                        0                    0              1  \n","611                        0                    1              1  \n","612                        0                    1              1  \n","613                        1                    0              0  \n","\n","[614 rows x 11 columns]"]},"execution_count":47,"metadata":{},"output_type":"execute_result"}],"source":["encode_non_numeric = pd.get_dummies(non_numeric, columns = ['Gender','Married','Dependents','Education','Self_Employed','Property_Area','Loan_Status'], drop_first = True)\n","encode_non_numeric"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rY3WBDJaULkD"},"outputs":[],"source":["encode_non_numeric.drop('Loan_ID', axis = 1, inplace = True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":505},"executionInfo":{"elapsed":539,"status":"ok","timestamp":1657275489810,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"Dny1TuzYUOgm","outputId":"cad7acc6-eb58-448d-96ce-15ffcbadfcd7"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-78072cd7-6eea-49d3-b9ed-48dc018ffb73\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender_Male</th>\n","      <th>Married_Yes</th>\n","      <th>Dependents_1</th>\n","      <th>Dependents_2</th>\n","      <th>Dependents_3+</th>\n","      <th>Education_Not Graduate</th>\n","      <th>Self_Employed_Yes</th>\n","      <th>Property_Area_Semiurban</th>\n","      <th>Property_Area_Urban</th>\n","      <th>Loan_Status_Y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>609</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>610</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>611</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>612</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>613</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>614 rows × 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-78072cd7-6eea-49d3-b9ed-48dc018ffb73')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-78072cd7-6eea-49d3-b9ed-48dc018ffb73 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-78072cd7-6eea-49d3-b9ed-48dc018ffb73');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["     Gender_Male  Married_Yes  Dependents_1  Dependents_2  Dependents_3+  \\\n","0              1            0             0             0              0   \n","1              1            1             1             0              0   \n","2              1            1             0             0              0   \n","3              1            1             0             0              0   \n","4              1            0             0             0              0   \n","..           ...          ...           ...           ...            ...   \n","609            0            0             0             0              0   \n","610            1            1             0             0              1   \n","611            1            1             1             0              0   \n","612            1            1             0             1              0   \n","613            0            0             0             0              0   \n","\n","     Education_Not Graduate  Self_Employed_Yes  Property_Area_Semiurban  \\\n","0                         0                  0                        0   \n","1                         0                  0                        0   \n","2                         0                  1                        0   \n","3                         1                  0                        0   \n","4                         0                  0                        0   \n","..                      ...                ...                      ...   \n","609                       0                  0                        0   \n","610                       0                  0                        0   \n","611                       0                  0                        0   \n","612                       0                  0                        0   \n","613                       0                  1                        1   \n","\n","     Property_Area_Urban  Loan_Status_Y  \n","0                      1              1  \n","1                      0              0  \n","2                      1              1  \n","3                      1              1  \n","4                      1              1  \n","..                   ...            ...  \n","609                    0              1  \n","610                    0              1  \n","611                    1              1  \n","612                    1              1  \n","613                    0              0  \n","\n","[614 rows x 10 columns]"]},"execution_count":49,"metadata":{},"output_type":"execute_result"}],"source":["encode_non_numeric"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":487,"status":"ok","timestamp":1657275509406,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"xnCnrTXlUReg","outputId":"de065fbe-d998-4194-bd1e-f12765431485"},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 614 entries, 0 to 613\n","Data columns (total 10 columns):\n"," #   Column                   Non-Null Count  Dtype\n","---  ------                   --------------  -----\n"," 0   Gender_Male              614 non-null    uint8\n"," 1   Married_Yes              614 non-null    uint8\n"," 2   Dependents_1             614 non-null    uint8\n"," 3   Dependents_2             614 non-null    uint8\n"," 4   Dependents_3+            614 non-null    uint8\n"," 5   Education_Not Graduate   614 non-null    uint8\n"," 6   Self_Employed_Yes        614 non-null    uint8\n"," 7   Property_Area_Semiurban  614 non-null    uint8\n"," 8   Property_Area_Urban      614 non-null    uint8\n"," 9   Loan_Status_Y            614 non-null    uint8\n","dtypes: uint8(10)\n","memory usage: 6.1 KB\n"]}],"source":["encode_non_numeric.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"elapsed":455,"status":"ok","timestamp":1657275517840,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"Jce-1ONZUT8U","outputId":"1410d042-de26-4720-e1a6-1aedf6662425"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-643b612c-0461-4087-986b-7e3ad714be8d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ApplicantIncome</th>\n","      <th>CoapplicantIncome</th>\n","      <th>LoanAmount</th>\n","      <th>Loan_Amount_Term</th>\n","      <th>Credit_History</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5849</td>\n","      <td>0.0</td>\n","      <td>146.412162</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4583</td>\n","      <td>1508.0</td>\n","      <td>128.000000</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3000</td>\n","      <td>0.0</td>\n","      <td>66.000000</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2583</td>\n","      <td>2358.0</td>\n","      <td>120.000000</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6000</td>\n","      <td>0.0</td>\n","      <td>141.000000</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>609</th>\n","      <td>2900</td>\n","      <td>0.0</td>\n","      <td>71.000000</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>610</th>\n","      <td>4106</td>\n","      <td>0.0</td>\n","      <td>40.000000</td>\n","      <td>180.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>611</th>\n","      <td>8072</td>\n","      <td>240.0</td>\n","      <td>253.000000</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>612</th>\n","      <td>7583</td>\n","      <td>0.0</td>\n","      <td>187.000000</td>\n","      <td>360.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>613</th>\n","      <td>4583</td>\n","      <td>0.0</td>\n","      <td>133.000000</td>\n","      <td>360.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>614 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-643b612c-0461-4087-986b-7e3ad714be8d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-643b612c-0461-4087-986b-7e3ad714be8d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-643b612c-0461-4087-986b-7e3ad714be8d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["     ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n","0               5849                0.0  146.412162             360.0   \n","1               4583             1508.0  128.000000             360.0   \n","2               3000                0.0   66.000000             360.0   \n","3               2583             2358.0  120.000000             360.0   \n","4               6000                0.0  141.000000             360.0   \n","..               ...                ...         ...               ...   \n","609             2900                0.0   71.000000             360.0   \n","610             4106                0.0   40.000000             180.0   \n","611             8072              240.0  253.000000             360.0   \n","612             7583                0.0  187.000000             360.0   \n","613             4583                0.0  133.000000             360.0   \n","\n","     Credit_History  \n","0               1.0  \n","1               1.0  \n","2               1.0  \n","3               1.0  \n","4               1.0  \n","..              ...  \n","609             1.0  \n","610             1.0  \n","611             1.0  \n","612             1.0  \n","613             0.0  \n","\n","[614 rows x 5 columns]"]},"execution_count":52,"metadata":{},"output_type":"execute_result"}],"source":["numeric_data"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"e2IXCgtgUYUA"},"outputs":[],"source":["##Concate the both parts of dataset..!!\n","\n","\n","new_loan_data = pd.concat([encode_non_numeric, numeric_data], axis = 1)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":430,"status":"ok","timestamp":1657275542790,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"n1hjKFAuUbGp","outputId":"a2b1e7f1-0eef-40f9-dce8-31cf2e16d706"},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 614 entries, 0 to 613\n","Data columns (total 15 columns):\n"," #   Column                   Non-Null Count  Dtype  \n","---  ------                   --------------  -----  \n"," 0   Gender_Male              614 non-null    uint8  \n"," 1   Married_Yes              614 non-null    uint8  \n"," 2   Dependents_1             614 non-null    uint8  \n"," 3   Dependents_2             614 non-null    uint8  \n"," 4   Dependents_3+            614 non-null    uint8  \n"," 5   Education_Not Graduate   614 non-null    uint8  \n"," 6   Self_Employed_Yes        614 non-null    uint8  \n"," 7   Property_Area_Semiurban  614 non-null    uint8  \n"," 8   Property_Area_Urban      614 non-null    uint8  \n"," 9   Loan_Status_Y            614 non-null    uint8  \n"," 10  ApplicantIncome          614 non-null    int64  \n"," 11  CoapplicantIncome        614 non-null    float64\n"," 12  LoanAmount               614 non-null    float64\n"," 13  Loan_Amount_Term         614 non-null    float64\n"," 14  Credit_History           614 non-null    float64\n","dtypes: float64(4), int64(1), uint8(10)\n","memory usage: 30.1 KB\n"]}],"source":["new_loan_data.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":679,"status":"ok","timestamp":1657275556106,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"mxSknwutUec-","outputId":"29d46691-5de8-4e55-ebdc-877547d753e9"},"outputs":[{"data":{"text/plain":["Gender_Male                0\n","Married_Yes                0\n","Dependents_1               0\n","Dependents_2               0\n","Dependents_3+              0\n","Education_Not Graduate     0\n","Self_Employed_Yes          0\n","Property_Area_Semiurban    0\n","Property_Area_Urban        0\n","Loan_Status_Y              0\n","ApplicantIncome            0\n","CoapplicantIncome          0\n","LoanAmount                 0\n","Loan_Amount_Term           0\n","Credit_History             0\n","dtype: int64"]},"execution_count":55,"metadata":{},"output_type":"execute_result"}],"source":["##Now, check the whole dataset null values..!!\n","\n","new_loan_data.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":619},"executionInfo":{"elapsed":1346,"status":"ok","timestamp":1657275570029,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"9RVJWSdKUhoe","outputId":"da9bc27a-f0c7-42e9-9dd0-d0580e448ae6"},"outputs":[{"data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fc03e1f6ed0>"]},"execution_count":56,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 864x576 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["##Now, create the heatmap of null values after concatenation..!!\n","\n","\n","fig = plt.figure(figsize = (12, 8))\n","sns.heatmap(new_loan_data.isnull(), yticklabels = False, cbar = False, cmap = 'viridis')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"b9YSqeNmUk3R"},"outputs":[],"source":["##Data Cleaning process end..!!\n","\n","\n","##Now, split dataset in train test split..!!\n","\n","\n","\n","x = new_loan_data.drop('Loan_Status_Y', axis = 1)\n","y = new_loan_data['Loan_Status_Y']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_dmF8ABoUpVO"},"outputs":[],"source":["x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hMVIG77xUrh0"},"outputs":[],"source":["##Creating a Decision Tree Model..!!\n","\n","\n","tree_model = DecisionTreeClassifier()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":441,"status":"ok","timestamp":1657275620089,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"RTiR8nNEUuLj","outputId":"14078c6d-4202-4c9c-f0ac-e1c716b94b8b"},"outputs":[{"data":{"text/plain":["DecisionTreeClassifier()"]},"execution_count":60,"metadata":{},"output_type":"execute_result"}],"source":["##Now, train our model with dataset..!!\n","\n","tree_model.fit(x_train, y_train)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gw_Nu1jpUxV-"},"outputs":[],"source":["##Now, predict our model..!!\n","\n","y_pred = tree_model.predict(x_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":411,"status":"ok","timestamp":1657275642259,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"llCIugUNU0Dx","outputId":"d1d55638-627c-4136-d4c7-e1cdc29a3c6d"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.66      0.49      0.56        43\n","           1       0.76      0.86      0.81        80\n","\n","    accuracy                           0.73       123\n","   macro avg       0.71      0.68      0.68       123\n","weighted avg       0.72      0.73      0.72       123\n","\n"]}],"source":["print(classification_report(y_test, y_pred))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":404,"status":"ok","timestamp":1657275653292,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"mOiCuVJgU2zf","outputId":"763719fc-5656-465f-df6d-3a5b0fe2c090"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[21 22]\n"," [11 69]]\n"]}],"source":["##Decision Tree Model Accuracy..!!\n","\n","print(confusion_matrix(y_test, y_pred))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":426,"status":"ok","timestamp":1657275702186,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"CzyQZXaHU5Z9","outputId":"ec9d23d4-3ffe-4d31-a733-e39232941fe1"},"outputs":[{"name":"stdout","output_type":"stream","text":["Decision Tree Model Accuracy: 73.17073170731707 %\n"]}],"source":["decision_accuracy = tree_model.score(x_test, y_test)\n","print('Decision Tree Model Accuracy:', decision_accuracy * 100, '%')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8UxnA7pfU7_m"},"outputs":[],"source":["##Now, creating a Random Forest Model..!!\n","\n","\n","from sklearn.ensemble import RandomForestClassifier"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jELINbhDVAy2"},"outputs":[],"source":["forest_model = RandomForestClassifier(n_estimators = 600)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1949,"status":"ok","timestamp":1657275707794,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"TTTIInHKVDKc","outputId":"b467e2a9-e79f-44d9-88a3-77cf7cb1a9c8"},"outputs":[{"data":{"text/plain":["RandomForestClassifier(n_estimators=600)"]},"execution_count":69,"metadata":{},"output_type":"execute_result"}],"source":["forest_model.fit(x_train, y_train)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WT6g30QyVGTB"},"outputs":[],"source":["##Now, predict our model..!!\n","\n","\n","forest_y_pred = forest_model.predict(x_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":746,"status":"ok","timestamp":1657275738683,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"EYUzm6ciVLAH","outputId":"e495fe98-5b94-498c-cabd-2e00dc15365a"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.78      0.42      0.55        43\n","           1       0.75      0.94      0.83        80\n","\n","    accuracy                           0.76       123\n","   macro avg       0.77      0.68      0.69       123\n","weighted avg       0.76      0.76      0.73       123\n","\n"]}],"source":["print(classification_report(y_test, forest_y_pred))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":408,"status":"ok","timestamp":1657275749755,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"5CliNyUDVOM9","outputId":"be41ef77-1e29-463d-84ac-66399520a52f"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[18 25]\n"," [ 5 75]]\n"]}],"source":["print(confusion_matrix(y_test, forest_y_pred))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":486,"status":"ok","timestamp":1657275769860,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"0mw3mrPgVQ8w","outputId":"40105489-6619-4bd4-b5b9-cec5ace1c303"},"outputs":[{"name":"stdout","output_type":"stream","text":["Random Forest Model Accuracy: 75.60975609756098 %\n"]}],"source":["##Random Forest Model Accuracy..!!\n","\n","\n","forest_accuracy = forest_model.score(x_test, y_test)\n","print('Random Forest Model Accuracy:', forest_accuracy * 100, '%')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5kCRA8WwVV2M"},"outputs":[],"source":["##Tree Visualization..!!\n","\n","\n","from IPython.display import Image  \n","from six import StringIO  \n","from sklearn.tree import export_graphviz\n","import pydot"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":414,"status":"ok","timestamp":1657275796358,"user":{"displayName":"Kamal Kashyap","userId":"14567358425937820361"},"user_tz":-330},"id":"oRFUDhFlVZk7","outputId":"25a54da4-fe18-4d0f-fc60-717d8f334223"},"outputs":[{"data":{"text/plain":["['Married_Yes',\n"," 'Dependents_1',\n"," 'Dependents_2',\n"," 'Dependents_3+',\n"," 'Education_Not Graduate',\n"," 'Self_Employed_Yes',\n"," 'Property_Area_Semiurban',\n"," 'Property_Area_Urban',\n"," 'Loan_Status_Y',\n"," 'ApplicantIncome',\n"," 'CoapplicantIncome',\n"," 'LoanAmount',\n"," 'Loan_Amount_Term',\n"," 'Credit_History']"]},"execution_count":75,"metadata":{},"output_type":"execute_result"}],"source":["features = list(new_loan_data.columns[1:])\n","features"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xg84qBViVcWV"},"outputs":[],"source":["dot_data = StringIO()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DloMse1DVe4P"},"outputs":[],"source":["export_graphviz(tree_model, out_file = dot_data, feature_names = features, filled = True, rounded = True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"output_embedded_package_id":"1r3gC824SdpsmKH79Ad18ND1VLzJblmj7"},"id":"9OVd9jD0ViyZ","outputId":"7d8a0094-46e2-4858-9fd7-1c4e362e3985"},"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}],"source":[""]}],"metadata":{"colab":{"collapsed_sections":[],"name":"Loan Data (Decision Tree & Random Forest)","provenance":[],"authorship_tag":"ABX9TyMWQFWMfaKB3nBbM3Iz3Zsn"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}